name: Build
on:
  push:
    branches:
      - master # or the name of your main branch
      - develop
  pull_request:
    branches:
      - develop
      - master
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
        - uses: actions/checkout@v2
        - name: Get the output time
          run: pwd
        - name: Get the output time
          run: ls -l          
        - name: Get the output time
          run: docker login -u sepasoporteit -p @cicatriz22puntos@
        - name: Get the output time
          run: docker --version
        - name: Get the output time
          run: curl -LO https://dl.k8s.io/release/v1.25.0/bin/linux/amd64/kubectl
        - name: Get the output time
          run: echo "$(cat kubectl.sha256)  kubectl" | sha256sum --check

# Docker (login and push to repo)
  #  docker login -u sepasoporteit -p @cicatriz22puntos@
  #  docker build . -t sepasoporteit/ejemplo:latest
  #  docker push sepasoporteit/ejemplo:latest


# Okteto (install and excecution)
  # 5O6pAiSx21MjySILFXP8gPlK6ePjcd727HyKqKRxCyFOnbKN
  # curl https://get.okteto.com -sSfL | sh
  # okteto namespace
  # kubeclt apply -f /k8s/deployment.yml
  # kubectl rollout restart deploy

        
        # - name: Set up QEMU
        #   uses: docker/setup-qemu-action@v2
        # - name: Set up Docker Buildx
        #   uses: docker/setup-buildx-action@v2
        # - name: Login to DockerHub
        #   uses: docker/login-action@v2
        #   with:
        #     username: sepasoporteit
        #     password: "@cicatriz22puntos@"
        # - name: Build and push
        #   uses: docker/build-push-action@v3
        #   with:
        #     file: ./Dockerfile
        #     context: .
        #     tags: sepasoporteit/ejemplo:latest          
        #     push: true

      # - uses: actions/checkout@v2
      #   with:
      #     fetch-depth: 0
      # - uses: sonarsource/sonarqube-scan-action@master
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      #     SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      # If you wish to fail your job when the Quality Gate is red, uncomment the
      # following lines. This would typically be used to fail a deployment.
      # - uses: sonarsource/sonarqube-quality-gate-action@master
      #   timeout-minutes: 5
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

# Docker (login and push to repo)
  #  docker login -u sepasoporteit -p @cicatriz22puntos@
  #  docker build . -t sepasoporteit/ejemplo:latest
  #  docker push sepasoporteit/ejemplo:latest


# Okteto (install and excecution)
  # 5O6pAiSx21MjySILFXP8gPlK6ePjcd727HyKqKRxCyFOnbKN
  # curl https://get.okteto.com -sSfL | sh
  # okteto namespace
  # kubeclt apply -f /k8s/deployment.yml
  # kubectl rollout restart deploy


